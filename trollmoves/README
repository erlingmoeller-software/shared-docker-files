This example shows how to:

1) Build a Docker image that contains everything needed to run Trollmoves
   Server and Client (TODO)
2) Use the Docker images to publish new files, make a request and have them
   transferred to a target host
3) Modify the config files to suit your needs


1) Building the Docker image

a) Install Docker

  Install docker following the instructions from the following links for
  your operating system.

  Ubuntu: https://docs.docker.com/install/linux/docker-ce/ubuntu/
  Fedora: https://docs.docker.com/install/linux/docker-ce/fedora/
  OSX: https://docs.docker.com/docker-for-mac/install/
  Windows: https://docs.docker.com/docker-for-windows/install/

b) Build the docker image "trollmoves"

  After you have a working Docker installation, in commandline, navigate
  to the directory where this README file is located
  (shared-docker-files/trollmoves/) and issue the following command to build
  the latest release of Trollmoves:

  In linux or OSX:

    docker build -t trollmoves -f build_dir/Dockerfile_stable build_dir

  In windows:

    docker build -t trollmoves -f build_dir\Dockerfile_stable build_dir

  Depending on the computer and network connection, the build takes
  from 5 minutes to 20 minutes.  To build the development version (using
  'main' branches of Pytroll packages), use Dockerfile_dev.


2) Running Trollmoves Server

  To test the Docker image you'll need some satellite data.  This
  example contains example configurations for the following satellite
  instruments and formats:

  - MSG SEVIRI in uncompressed HRIT format

  All the configuration files use UNIX paths, as the Docker image is
  based on Ubuntu linux.

a) Start the trollmoves Docker image

  This example shows how to run Trollmoves Server for hosting MSG
  SEVIRI data in uncompressed HRIT format.

  docker run \
    -e LOCAL_USER_ID=`id -u $USER` \
    --mount type=bind,source=`pwd`/config_trollmoves_server,target=/mnt/config/ \
    --mount type=bind,source=`pwd`/logs/,target=/mnt/logs/ \
    --mount type=bind,source=`pwd`/trollmoves_server_input/,target=/mnt/input/ \
    -p 9001:9001 \
    -p 9013:9013 \
    -p 9201:9201 \
    --rm \
    trollmoves

  This will start Trollmoves Server and mount the three subdirectories
  within this directory to the trollmoves Docker container.  In
  addition to exposing the port for Supervisord web interface, also
  the publish (9013) and request (9201) ports are exposed.  These
  ports are set in supervisord.conf and
  trollmoves_server_geo_msg_0deg.ini respectively.

  The processes running inside the container can be controlled and
  monitored by opening the following URL in a browser:

    http://127.0.0.1:9001

  The login credentials, given in supervisord.conf, are "username" and
  "password".

b) Copy files to "trollmoves_server_input" directory

  Copying files to the mounted "trollmoves_server_input" subdirectory
  will trigger Trollmoves Server to publish the presence of newly
  available data.  Log files are written to "logs" directory, and
  following them shows the arrival of new files and that they are
  advertised.  The log messages are also printed in the terminal where
  the trollmoves Docker container is running.

c) File transfers

  The Client defines the protocol used for the transfers.

  For FTP (`ftp:// as protocol) the credentials are defined in the
  Client's config.

  To use `file://` protocol (simple copy) the target directory needs
  to be mounted similarly to the config, input and log directories in
  the `docker run` command.

  For SCP (secure copy over SSH, `scp://` as protocol) the credentials
  can be used from the host machine by mounting the `$USER/.ssh/`
  directory to the container, and using the internal-to-the-container
  path to the key file in the Server config.

3) Adapting the configuration files

  The example configuration files can be modified as the user sees
  fit, but the following things need to be noted:

  - The trollmoves Docker image is built to start Supervisord (which
    handles the startup of all the necessary software) using the
    configuration file placed in /mnt/config/supervisord.conf

  - If the paths for the input, and/or logs are changed, these
    need to be updated also in the configuration files

  - Remember to match the mount-points and exposed ports in the
    "docker run" command to those defined in the configuration files

  - For options in the used package, consult the documentation and/or
    example configs of corresponding package
